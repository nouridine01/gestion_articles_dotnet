// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using outils_dotnet.Data;

namespace outils_dotnet.Migrations.db
{
    [DbContext(typeof(dbContext))]
    partial class dbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("outils_dotnet.Areas.Identity.Data.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Prenom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("outils_dotnet.Models.Achat", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArticleId")
                        .HasColumnType("int");

                    b.Property<long?>("ArticleId1")
                        .HasColumnType("bigint");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<long?>("ClientId1")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Quantite")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId1");

                    b.HasIndex("ClientId1");

                    b.ToTable("Achat");
                });

            modelBuilder.Entity("outils_dotnet.Models.Article", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Achetable")
                        .HasColumnType("bit");

                    b.Property<long?>("CategorieId")
                        .HasColumnType("bigint");

                    b.Property<string>("CreateById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Louable")
                        .HasColumnType("bit");

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Prix")
                        .HasColumnType("float");

                    b.Property<int>("Quantite")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategorieId");

                    b.HasIndex("CreateById");

                    b.ToTable("Article");
                });

            modelBuilder.Entity("outils_dotnet.Models.Categorie", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categorie");
                });

            modelBuilder.Entity("outils_dotnet.Models.Client", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasFilter("[UserId] IS NOT NULL");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("outils_dotnet.Models.Location", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArticleId")
                        .HasColumnType("int");

                    b.Property<long?>("ArticleId1")
                        .HasColumnType("bigint");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<long?>("ClientId1")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date_retour")
                        .HasColumnType("datetime2");

                    b.Property<int>("Quantite")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId1");

                    b.HasIndex("ClientId1");

                    b.ToTable("Location");
                });

            modelBuilder.Entity("outils_dotnet.Models.Reservation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArticleId")
                        .HasColumnType("int");

                    b.Property<long?>("ArticleId1")
                        .HasColumnType("bigint");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<long?>("ClientId1")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date_recup")
                        .HasColumnType("datetime2");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId1");

                    b.HasIndex("ClientId1");

                    b.ToTable("Reservation");
                });

            modelBuilder.Entity("outils_dotnet.Models.Achat", b =>
                {
                    b.HasOne("outils_dotnet.Models.Article", "Article")
                        .WithMany("AchatEffectues")
                        .HasForeignKey("ArticleId1");

                    b.HasOne("outils_dotnet.Models.Client", "Client")
                        .WithMany("Achats")
                        .HasForeignKey("ClientId1");

                    b.Navigation("Article");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("outils_dotnet.Models.Article", b =>
                {
                    b.HasOne("outils_dotnet.Models.Categorie", "Categorie")
                        .WithMany("Articles")
                        .HasForeignKey("CategorieId");

                    b.HasOne("outils_dotnet.Areas.Identity.Data.User", "CreateBy")
                        .WithMany()
                        .HasForeignKey("CreateById");

                    b.Navigation("Categorie");

                    b.Navigation("CreateBy");
                });

            modelBuilder.Entity("outils_dotnet.Models.Client", b =>
                {
                    b.HasOne("outils_dotnet.Areas.Identity.Data.User", "User")
                        .WithOne("Client")
                        .HasForeignKey("outils_dotnet.Models.Client", "UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("outils_dotnet.Models.Location", b =>
                {
                    b.HasOne("outils_dotnet.Models.Article", "Article")
                        .WithMany("LocationEnCours")
                        .HasForeignKey("ArticleId1");

                    b.HasOne("outils_dotnet.Models.Client", "Client")
                        .WithMany("Locations")
                        .HasForeignKey("ClientId1");

                    b.Navigation("Article");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("outils_dotnet.Models.Reservation", b =>
                {
                    b.HasOne("outils_dotnet.Models.Article", "Article")
                        .WithMany("ReservationEnCours")
                        .HasForeignKey("ArticleId1");

                    b.HasOne("outils_dotnet.Models.Client", "Client")
                        .WithMany("Reservations")
                        .HasForeignKey("ClientId1");

                    b.Navigation("Article");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("outils_dotnet.Areas.Identity.Data.User", b =>
                {
                    b.Navigation("Client");
                });

            modelBuilder.Entity("outils_dotnet.Models.Article", b =>
                {
                    b.Navigation("AchatEffectues");

                    b.Navigation("LocationEnCours");

                    b.Navigation("ReservationEnCours");
                });

            modelBuilder.Entity("outils_dotnet.Models.Categorie", b =>
                {
                    b.Navigation("Articles");
                });

            modelBuilder.Entity("outils_dotnet.Models.Client", b =>
                {
                    b.Navigation("Achats");

                    b.Navigation("Locations");

                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
